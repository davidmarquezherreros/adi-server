#%RAML 0.8
title: Recetas
baseUri: https://foodapi-dmarquezh.herokuapp.com

version: 1.0
securitySchemes:
  - basic:
      description: |
              This API supports Basic Authentication.
              Username: usuario
              Password: 123456

      type: Basic Authentication

/usuarios:
  get:
    description:
      Retrieve all the users
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "id": 1,
                "nombre": "David",
                "apellidos": "Marquez Herreros",
                "email": "davidmarquez@email.com",
                "_links": {
                  "self": "/usuarios/",
                  "first": "/usuarios/?page=1",
                  "last": "/usuario/?page=1"
                  }
              }
  /{usuario_id}:
    get:
      description:
        Retrieves an user given the ID
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 1,
                  "nombre": "David",
                  "apellidos": "Marquez Herreros",
                  "email": "davidmarquez@email.com"
                }
        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
    put:
        responses:
          204:
            body:
              text/plain:
                example: |
                    No content

          400:
                    body:
                      text/plain:
                        example: |
                          Bad request
          404:
                    body:
                      text/plain:
                        example: |
                          Resource not found
        description:
          Updates an user given the ID
        body:
          application/json:
            schema: |
              {
                "nombre":"David",
                "apellidos":"Marquez Herreros",
                "email":"davidmarquezherreros@email.com"
              }
    delete:
      description: Deletes an user given the ID
      responses:
        204:
          body:
            text/plain:
              example: |
                No content

        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
              description:
                Deletes an user given the ID

  /{usuario_id}/pedidos/:
    securedBy:
      - basic
    post:
      securedBy:
        - basic
      responses:
        201:
          body:
            text/plain:
              example: |
                Created
        404:
          body:
            text/plain:
              example: |
                Resource not found
      body:
        application/json:
          schema: |
            {
              "cantidad": 100,
              "precio": 1
            }
  /{usuario_id}/pedidos/{pedido_id}/ingredientes:
    get:
      description: Retrieves all the ingredients of an order
      securedBy:
        - basic
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 12,
                  "nombre": "Jamon york",
                  "precio": 13
                }
        400:
          body:
            text/plain:
              example: Bad request
        404:
          body:
            text/plain:
              example: Resource not found
  /{usuario_id}/pedidos/{pedido_id}/ingredientes/{id_ingrediente}:
    post:
      description: Adds a new ingredient to the order
      securedBy:
        - basic
      responses:
        201:
          body:
            text/plain:
              example: Created
        400:
          body:
            text/plain:
              example: Bad request
        404:
          body:
            text/plain:
              example: Resource not found
  post:
    responses:
      201:
        body:
          text/plain:
            example: |
              Created
      400:
        body:
          text/plain:
            example: |
              Bad request
    securedBy:
      - basic
    body:
      application/json:
        schema: |
          {
            "nombre":"David",
            "apellidos":"Marquez",
            "email":"davidmarquez@email.com"
          }
/recetas:
  get:
    description: Retrieves all the recipes
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "id": 1,
                "nombre": "Ternera con parmesano",
                "descripcion": "Cocinas la carne y le pones parmesano",
                "dificultad": 1,
                "CategoriaId": 1,
                "_links": {
                  "self": "/recetas",
                  "first": "/recetas/?page=1",
                  "last": "/recetas/?page=1",
                  "next": "/recetas/?page=1"
                }
              }
  post:
    responses:
      201:
        body:
          text/plain:
            example: |
              Created
      400:
        body:
          text/plain:
            example: |
              Bad request
    securedBy:
      - basic

    description: Creates a new recipe
    body:
      application/json:
        schema: |
          {
          "nombre": "jamon serrano",
          "precio": 20
          }
  /{receta_id}:
    get:
      description: Retrieves a recipe given the ID
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 1,
                  "nombre": "Ternera con parmesano",
                  "descripcion": "Cocinas la carne y le pones parmesano",
                  "dificultad": 1,
                  "CategoriaId": 1
                }
    delete:
      responses:
        204:
          body:
            text/plain:
              example: |
                No content
        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
      securedBy:
        - basic
      description: Deletes a recipe given the ID
    put:
      description: Updates a recipe given the ID
      responses:
        204:
          body:
            text/plain:
              example: |
                No content
        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
      body:
        application/json:
          schema: |
            {
              "nombre": "jamon serrano",
              "precio": 20
            }
    securedBy:
      - basic
  /{receta_id}/comentarios/:
    get:
      description: Retrieves all the comments of the recipe given the ID
      responses:
        200:
          body:
            application/json:
              example: |
                {
                    "id": 1,
                    "mensaje": "Comentario 1",
                    "RecetaId": 1,
                    "id": 2,
                    "mensaje": "Comentario 2",
                    "RecetaId": 1,
                    "id": 3,
                    "mensaje": "Comentario 3",
                    "RecetaId": 1
                }
        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
  /{receta_id}/ingredientes/:
    get:
      description: Retrieves all the ingredients of the recipe with ID = receta_id
      responses:
        200:
          body:
            application/json:
              example: |
                {
                "id": 11,
                "nombre": "jamon serrano",
                "precio": 20
                }
        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
  /{receta_id}/ingredientes/{ingrediente_id}:
    put:
      description: Adds ingredient = ingrediente_id to the recipe with ID = receta_id
      responses:
        204:
          body:
            text/plain:
              example: |
                No content
        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
      body:
        application/json:
          schema: |
            {
              "nombre": "jamon serrano",
              "precio": 20
            }
/ingredientes:
  get:
    description:
      Retrieve all the ingredients
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "id": 1,
                "nombre": "Aceite de oliva",
                "precio": 3,
                "_links": {
                  "self": "/ingredientes/",
                  "first": "/ingredientes/?page=1",
                  "last": "/ingredientes/?page=1"
                  }
              }
  /{ingrediente_id}:
    get:
      description:
        Retrieves an ingredient given the ID
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 1,
                  "nombre": "Aceite de oliva",
                  "precio": 3
                }
        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
    put:
      description: Updates an ingredient given the ID
      securedBy:
        - basic
      responses:
        204:
          body:
            text/plain:
              example: |
                No content

        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
      body:
        application/json:
          schema: |
            {
              "nombre": "Aceite de oliva",
              "precio": 3
            }

    delete:
      description: Deletes the ingredient given the ID
      responses:
        204:
          body:
            text/plain:
              example: |
                No content
        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
              description:
                Deletes an ingredient given the ID
  post:
    description: Creates a new ingredient
    securedBy:
      - basic
    body:
      application/json:
        schema: |
          {
            "nombre":"nombre igrediente",
            "precio": 1
          }
    responses:
      201:
        body:
          text/plain:
            example: Bad request
      400:
        body:
          text/plain:
            example: |
              Bad request
/pedidos:
  get:
    description:
      Retrieve all the orders
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "id": 1,
                "Cantidad": 2,
                "Precio": 6,
                "UsuarioId": 1,
                "_links": {
                  "self": "/pedidos/",
                  "first": "/pedidos/?page=1",
                  "last": "/pedidos/?page=1"
                  }
              }
  /{pedido_id}:
    get:
      description:
        Retrieves an order given the ID
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 1,
                  "Cantidad": 2,
                  "Precio": 6,
                  "UsuarioId": 1
                }
        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
    put:
        responses:
          204:
            body:
              text/plain:
                example: |
                    No content

          400:
            body:
              text/plain:
                example: |
                  Bad request
          404:
            body:
              text/plain:
                example: |
                  Resource not found
        description:
          Updates an user given the ID
        securedBy:
          - basic
        body:
          application/json:
            schema: |
              {
                "cantidad": 2,
                "precio": 6,
                "usuarioId": 1
              }
/categorias:
  get:
    description:
      Retrieve all the categories
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "id": 1,
                "nombre": "Carnes",
                "_links": {
                  "self": "/categorias/",
                  "first": "/categorias/?page=1",
                  "last": "/categorias/?page=1"
                  }
              }
  /{categoria_id}:
    get:
      description:
        Retrieves a category given the ID
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 1,
                  "nombre": "Carnes"
                }
        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
    put:
        responses:
          204:
            body:
              text/plain:
                example: |
                    No content

          400:
            body:
              text/plain:
                example: |
                  Bad request
          404:
            body:
              text/plain:
                example: |
                  Resource not found
        description:
          Updates an order given the ID
        securedBy:
          - basic
        body:
          application/json:
            schema: |
              {
                "nombre": "nombre categoria"
              }
    delete:
      securedBy:
        - basic
      description: Deletes a category given the ID
      responses:
        204:
          body:
            text/plain:
              example: |
                No content

        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found

  /{categoria_id}/recetas:
    get:
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 1,
                  "nombre": "Ternera con parmesano",
                  "descripcion": "Cocinas la carne y le pones parmesano",
                  "dificultad": 1,
                  "CategoriaId": 1
                  ,
                  "id": 2,
                  "nombre": "Ternera con sal",
                  "descripcion": "Cocinas la carne y le pones sal",
                  "dificultad": 1,
                  "CategoriaId": 1
                }
        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
/comentarios:
  get:
    description:
      Retrieve all the comments
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "id":1,
                "mensaje": "Comentario 1",
                "_links": {
                  "self": "/comentarios/",
                  "first": "/comentarios/?page=1",
                  "last": "/comentarios/?page=1"
                  }
              }
  /{comentario_id}:
    get:
      description:
        Retrieves a comment given the ID
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id":1,
                  "mensaje": "Comentario 1"
                }
        400:
          body:
            text/plain:
              example: |
                Bad request
        404:
          body:
            text/plain:
              example: |
                Resource not found
    put:
        responses:
          204:
            body:
              text/plain:
                example: |
                    No content

          400:
            body:
              text/plain:
                example: |
                  Bad request
          404:
            body:
              text/plain:
                example: |
                  Resource not found
        description:
          Updates a comment given the ID
        securedBy:
          - basic
        body:
          application/json:
            schema: |
              {
              "mensaje": "comentario "
              }
